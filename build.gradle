buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'vn.uit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

bootJar {
	launchScript()
}

//AWS SDK
dependencyManagement {
	imports {
		mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.228'
	}
}

dependencies {
	// Core web repositories 
	compile('org.springframework.boot:spring-boot-starter-web')
	// Cor RESTful API
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	// JPA Data (We are going to use Repositories, Entities, Hibernate, etc...)
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	// Connection to MySQL. If using another db, find it here: https://mvnrepository.com
	runtime('mysql:mysql-connector-java')

	// Spring security
	compile 'org.springframework.security:spring-security-web:5.0.3.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-security')

    //swagger
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    //Logging
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.21'

    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	//Security
	compile group: 'org.springframework.security', name: 'spring-security-jwt', version: '1.0.7.RELEASE'
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.1.0.RELEASE'
	compile group: 'com.h2database', name: 'h2', version: '1.4.192'
	compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.2.3.RELEASE'
	compile group: 'org.springframework.security', name: 'spring-security-config', version: '3.2.4.RELEASE'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
	compile group: 'org.json', name: 'json', version: '20180130'

	// AWS SDK
	compile 'com.amazonaws:aws-java-sdk-s3'
}

configurations.all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
}